.TH mfstrashretention "1" "September 2024" "MooseFS 4.56.6-1" "This is part of MooseFS"
.SH NAME
mfstrashretention \- \fBMooseFS\fP trash retention management tools
.SH SYNOPSIS
.B mfsgettrashretention
[\fB-?\fP] [\fB-r\fP] [\fB-n\fP|\fB-h\fP|\fB-H\fP|\fB-k\fP|\fB-m\fP|\fB-g\fP] \fIOBJECT\fP...
.PP
.B mfssettrashretention
[\fB-?\fP] [\fB-r\fP] [\fB-n\fP|\fB-h\fP|\fB-H\fP|\fB-k\fP|\fB-m\fP|\fB-g\fP] \fITIME\fP[\fB+\fP|\fB-\fP] \fIOBJECT\fP...
.PP
.B mfscopytrashretention
[\fB-?\fP] [\fB-r\fP] [\fB-n\fP|\fB-h\fP|\fB-H\fP|\fB-k\fP|\fB-m\fP|\fB-g\fP] \fISOURCE_OBJECT\fP \fIOBJECT\fP...
.SH DESCRIPTION
These tools operate on object's
\fItrash retention\fP value, i.e. the time the file is preserved in
special \fItrash\fP directory before it's finally removed from filesystem.
\fITrash retention\fP must be a non\-negative integer value.
.PP
\fBmfsgettrashretention\fP prints current \fItrash retention\fP value of given object(s).
\fB-r\fP option enables recursive mode, which works as usual for every given
file, but for every given directory additionally prints current \fItrash retention\fP
value of all contained objects (files and directories).
.PP
\fBmfssettrashretention\fP changes current \fItrash retention\fP value of given object(s).
If new value is specified in \fITIME\fP\fB+\fP form, \fItrash retention\fP value is
increased to \fITIME\fP for objects with lower \fItrash retention\fP value and unchanged
for the rest. Similarly, if new value is specified as \fITIME\fP\fB\-\fP,
\fItrash retention\fP value is decreased to \fITIME\fP for objects with higher
\fItrash retention\fP value and unchanged for the rest. \fB-r\fP option enables
recursive mode.
These tools can be used on any file, directory or deleted (\fItrash\fP) file.
.PP
\fBmfscopytrashretention\fP tool can be used to copy \fItrash retention\fP value from one object to another.
.PP
\fITIME\fP parameter is specified as a general time type value, with minimum unit being hours and with an additional possibility of adding a + or - sign at the end; for details about time format see TIME
.SH TIME
.PP
For time variables their value can be defined as a number of seconds or hours (integer), depending on minimum unit of the variable, or as a time period in one of two possible formats:
.PP
first format: #.#T where T is one of: s-seconds, m-minutes, h-hours, d-days or w-weeks; fractions of minimum unit will be rounded to integer value
.PP
second format: #w#d#h#m#s, any number of definitions can be ommited, but the remaining definitions must be in order (so #d#m is still a valid definition, but #m#d is not); ranges: s,m: 0 to 59, h: 0 to 23, d: 0 t
o 6, w is unlimited and the first definition is also always unlimited (i.e. for #d#h#m d will be unlimited)
.PP
If a minimum unit of a variable is larger than seconds, units below the minimum one will not be accepted. For example, a variable that has hours as a minimum unit will not accept s and m units.
.PP
Examples:
.PP
1.5d is the same as 1d12h, is the same as 36h
.PP
2.5w is the same as 2w3d12h, is the same as 420h; 2w84h is not a valid time period (h is not the first definition, so it is bound by range 0 to 23)
.SH GENERAL OPTIONS
Most \fBMooseFS\fP tools use \fB-n\fP, \fB-h\fP, \fB-H\fP, \fB-k\fP, \fB-m\fP and \fB-g\fP
options to select
format of printed numbers. \fB-n\fP causes to print exact numbers, \fB-h\fP
uses binary prefixes (Ki, Mi, Gi as 2^10, 2^20 etc.) while \fB-H\fP uses SI
prefixes (k, M, G as 10^3, 10^6 etc.). \fB-k\fP, \fB-m\fP and \fB-g\fP show plain numbers
respectivaly in kibis (binary kilo - 1024), mebis (binary mega - 1024^2)
and gibis (binary giga - 1024^3).
The same can be achieved by setting
\fBMFSHRFORMAT\fP environment variable to: \fB0\fP (exact numbers), \fB1\fP
or \fBh\fP (binary prefixes), \fB2\fP or \fBH\fP (SI prefixes), \fB3\fP or
\fBh+\fP (exact numbers and binary prefixes), \fB4\fP or \fBH+\fP (exact
numbers and SI prefixes). The default is to print just exact numbers. 
.PP
Option \fB-?\fP displays short usage message.

.SH INHERITANCE
When a new object is created in MooseFS, trash retention is inherited from the parent directory. A newly created
object inherits always the current value of its parent's trash retention. Changing a
directory's trash retention does not affect its already created children. To change
trash retention for a directory and all of its children use \fB-r\fP option.
.SH "REPORTING BUGS"
Report bugs to <bugs@moosefs.com>.
.SH COPYRIGHT
Copyright (C) 2024 Jakub Kruszona-Zawadzki, Saglabs SA

This file is part of MooseFS.

MooseFS is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 2 (only).

MooseFS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with MooseFS; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02111-1301, USA
or visit http://www.gnu.org/licenses/gpl-2.0.html
.SH "SEE ALSO"
.BR mfsmount (8),
.BR mfstools (1)
