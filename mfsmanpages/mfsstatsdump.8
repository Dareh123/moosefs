.TH mfsstatsdump "8" "June 2025" "MooseFS 4.57.7-1" "This is part of MooseFS"
.ss 12 0
.SH NAME
mfsstatsdump \- dump usage data from master stats file in csv or png format
.SH SYNOPSIS
.B mfsstatsdump
\fB-f\fP \fIfields\fP [\fB-i\fP \fIstats_file\fP] [\fB-r\fP \fIrange\fP] [\fB-s\fP \fIseparator\fP] [\fB-p\fP \fIpng_filename\fP [\fB-x\fP \fIchart_width\fP] [\fB-y\fP \fIchart_height\fP]] [\fB-hHd\fP]
.SH DESCRIPTION
\fBmfsstatsdump\fP dumps usage data from master stats file.
These are the same data sets that are used to make GUI charts. Output can be either in text format (csv)
or in graphical format (png). That means \fB-p\fP, \fB-x\fP and \fB-y\fP options are mutually exclusive with
\fB-h\fP, \fB-H\fP and \fB-d\fP options.
.PP
MooseFS master server saves the stats file in the \fBDATA_PATH\fP directory - see 
.BR mfsmaster.cfg (5)
.SS OUTPUT
Text output - text (csv) file where first column is a timestamp (or date if \fB-d\fP option
was specified), the following column are what was specified with the \fB-f\fP options, formatted
according to used options (none, \fB-s\fP and \fB-h\fP or \fB-H\fP)
.PP
Graphical output - one png file with a chart is created for every
field specified with the \fB-f\fP option, according to the naming scheme declared
with the \fB-p\fP option. Size may be adjusted with \fB-x\fP and \fB-y\fP options.
.SH OPTIONS
.TP
\fB-f\fP
field names separated by ',' (see FIELDS section); at least one field is mandatory; if an asterisk (*) is used,
all fields are dumped
.TP
\fB-i\fP
name of mfs binary stats file (default: \fIdefault_data_path\fP/stats.mfs)
.TP
\fB-r\fP
range type: 0 - short range (minute)
1 - medium range (6 minutes)
2 - long range (30 minutes)
3 - very long range (day)
.TP
\fB-s\fP
specify column separator (default: tabulator)
.TP
\fB-p\fP
optional PNG filename (field name will be added before .png; YYYY -> YYYY_FIELD.png, YYYY.png -> YYYY_FIELD.png)
.TP
\fB-x\fP
PNG chart width (default: 1600)
.TP
\fB-y\fP
PNG chart height (should be divisible by 20 - if not then it will be adjusted; default:320)
.TP
\fB-h\fP
"human-readable" numbers using base 2 prefixes (IEC 60027)
.TP
\fB-H\fP
"human-readable" numbers using base 10 prefixes (SI)
.TP
\fB-d\fP
show timestamps in YYYY-MM-DD HH:MM format
.SS FIELDS
.TP 16
ucpu
User cpu usage
.TP
scpu
System cpu usage
.TP
cpu
Total cpu usage (in csv sum of scpu and ucpu, in png shows both in different colors)
.TP
delete
Number of chunk deletions
.TP
replicate
Number of chunk replications
.TP
statfs
Number of statfs operations
.TP
getattr
Number of getattr operations
.TP
setattr
Number of setattr operations
.TP
lookup
Number of lookup operations
.TP
mkdir
Number of mkdir operations
.TP
rmdir
Number of rmdir operations
.TP
symlink
Number of symlink operations
.TP
readlink
Number of readlink operations
.TP
mknod
Number of mknod operations
.TP
unlink
Number of unlink operations
.TP
rename
Number of rename operations
.TP
link
Number of link operations
.TP
readdir
Number of readdir operations
.TP
open
Number of open operations
.TP
read
Number of read operations
.TP
write
Number of write operations
.TP
prcvd
Received packets
.TP
psent
Sent packets
.TP
brcvd
Received bytes
.TP
bsent
Sent bytes
.TP
memoryrss
Resident memory usage
.TP
memoryvirt
Virtual memory usage
.TP
mem
Total memory usage (in csv is the same as memoryvirt, in png shows both memoryrss and memoryvirt using two colors)
.TP
usedspace
Used raw disk space
.TP
totalspace
Total raw disk space
.TP
space
Total raw disk space (in csv the same as totalspace, in png shows both usedspace and totalspace using two colors)
.TP
readchunk
Number of chunk_read operations
.TP
writechunk
Number of chunk_write operations
.TP
create
Number of chunk creation attempts
.TP
change
Number of chunk internal operation attempts
.TP
delete_ok
Number of successful chunk deletions
.TP
delete_err
Number of unsuccessful chunk deletions
.TP
delete_stat
Sum of succesful and unsuccessful chunk deletions (in png shows both delete_ok and delete_err using two colors)
.TP
replicate_ok
Number of successful chunk replications
.TP
replicate_err
Number of unsuccessful chunk replications
.TP
replicate_stat
Sum of succesful and unsuccessful chunk replications (in png shows both replicate_ok and replicate_err using two colors)
.TP
create_ok
Number of successful chunk creations
.TP
create_err
Number of unsuccessful chunk creations
.TP
create_stat
Sum of succesful and unsuccessful chunk creations (in png shows both create_ok and create_err using two colors)
.TP
change_ok
Number of successful chunk internal operations
.TP
change_err
Number of unsuccessful chunk internal operations
.TP
change_stat
Sum of succesful and unsuccessfulchunk internal operations (in png shows both change_ok and change_err using two colors)
.TP
split_ok
Number of successful chunk split operations
.TP
split_err
Number of unsuccessful chunk split operations
.TP
split_stat
Sum of succesful and unsuccessful chunk split operations (in png shows both split_ok and split_err using two colors)
.TP
fileobjects
Number of file objects
.TP
metaobjects
Number of non-file objects (directories,symlinks,etc.)
.TP
objects
Number of all objects (in png shows both fileobjects and metaobjects using two colors)
.TP
chunksec8
Total number of chunks stored in EC8 format
.TP
chunksec4
Total number of chunks stored in EC4 format
.TP
chunkscopy
Total number of chunks stored in COPY format
.TP
chunks
Total number of chunks stored in any format (in png shows chunksec8, chunksec4 and chunkscopy using three colors)
.TP
chregdanger
Number of endangered chunks (mark for removal excluded)
.TP
chregunder
Number of undergoal chunks (mark for removal excluded)
.TP
regunder
Number of endangered and undergoal chunks (mark for removal excluded, in png shows chregdanger and chregunder using two colors)
.TP
challdanger
Number of endangered chunks (mark for removal included)
.TP
challunder
Number of undergoal chunks (mark for removal included)
.TP
allunder
Number of endangered and undergoal chunks (mark for removal included, in png shows challdanger and challunder using two colors)
.TP
bytesread
Average number of bytes read per second by all clients
.TP
byteswrite
Average number of bytes written per second by all clients
.TP
fsync
Number of fsync operations
.TP
lock
Number of lock operations
.TP
snapshot
Number of snapshot operations
.TP
truncate
Number of truncate operations
.TP
getxattr
Number of getxattr operations
.TP
setxattr
Number of setxattr operations
.TP
getfacl
Number of getfacl operations
.TP
setfacl
Number of setfacl operations
.TP
fcreate
Number of file create operations
.TP
meta
Number of extra metadata operations (sclass,trashretention,eattr etc.)
.TP
delay
(pro only) Master max delay in seconds
.TP
servers
Number of all registered chunk servers (both connected and disconnected)
.TP
dservers
Number of all disconnected chunk servers
.TP
mdservers
Number of disconnected chunk servers that are in maintenance mode
.TP
cservers
Number of all registered chunk servers (in csv equals to servers, in png shows servers, dservers and mdservers using three different colors)
.TP
udiff
Difference in space usage percent between the most and least used chunk server
.SH NOTES
.PP
Data sets \fBdelete\fP and \fBdelete_stat\fP in a properly working system should be roughly the same, but not always identical (in their CSV form), this stems from the fact that
the \fBdelete\fP set is calculated using the number of requests sent by the master, and the \fBdelete_stat\fP set is calculated using the number of replies received from chunk servers, 
so local fluctuations may be observed (i.e. one minute has more sent requests - higher value in the \fBdelete\fP set and the next minute has more answers - higher value in \fBdelete_stat\fP set).
But if one were to calculate the sum of differences between the two sets over time, this sum should never grow over a certain number.
.PP
However, if there is some kind of problem (with network communication and/or chunk server process(es)) and some chunk delete requests are stalled/go missing, then \fBdelete\fP values may be 
constantly higher than the \fBdelete_stat\fP values and the sum of differences between the two sets will be steadily growing over time.
.PP
Same goes for \fBreplicate\fP(_stat), \fBcreate\fP(_stat), \fBchange\fP(_stat) and \fBsplit\fP(_stat) data sets.
.SH "REPORTING BUGS"
Report bugs to <bugs@moosefs.com>.
.SH COPYRIGHT
Copyright (C) 2025 Jakub Kruszona-Zawadzki, Saglabs SA

This file is part of MooseFS.

MooseFS is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 2 (only).

MooseFS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with MooseFS; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02111-1301, USA
or visit http://www.gnu.org/licenses/gpl-2.0.html
.SH "SEE ALSO"
.BR mfsmount (8),
.BR moosefs (7)
